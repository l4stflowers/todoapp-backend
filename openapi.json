{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Todoapp API"
  },
  "tags": [
    {
      "name": "todo",
      "description": "Api for todo"
    }
  ],
  "paths": {
    "/users/{userId}/todos": {
      "get": {
        "tags": [
          "todo"
        ],
        "summary": "Get all todos for the specified user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "state",
            "schema": {
              "$ref": "#/components/schemas/TodoStates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Todo"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "todo"
        ],
        "summary": "Create new todo for the specified user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todo"
              }
            }
          },
          "description": "The todo to create"
        },
        "responses": {
          "201": {
            "description": "Created",
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Uri for created todo"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/users/{userId}/todos/{todoId}": {
      "put": {
        "tags": [
          "todo"
        ],
        "summary": "Update the todo for the specified user",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "todoId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Todo"
              }
            }
          },
          "description": "The todo to update"
        },
        "responses": {
          "200": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Todo"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "todo"
        ],
        "summary": "Delete the todo for the specified user",
        "description": "",
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "todoId",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://localhost/dev"
    },
    {
      "url": "http://localhost/dev"
    }
  ],
  "components": {
    "responses": {
      "BadRequest": {
        "description": "Some request values are invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "Todo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "readOnly": true
          },
          "title": {
            "type": "string"
          },
          "memo": {
            "type": "string"
          },
          "due-date": {
            "type": "string",
            "format": "date"
          },
          "repeat": {
            "$ref": "#/components/schemas/TodoRepeatTypes"
          },
          "reminds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "date-time"
            }
          },
          "state": {
            "$ref": "#/components/schemas/TodoStates"
          }
        },
        "required": [
          "id",
          "title"
        ]
      },
      "TodoRepeatTypes": {
        "type": "string",
        "enum": [
          "none",
          "day",
          "month",
          "year"
        ],
        "description": "must be 'none' when due-date is emprty"
      },
      "TodoStates": {
        "type": "string",
        "enum": [
          "created",
          "done",
          "deleted"
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "code",
          "message"
        ]
      }
    }
  }
}